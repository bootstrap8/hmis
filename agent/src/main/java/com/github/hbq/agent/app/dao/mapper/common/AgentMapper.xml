<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.hbq.agent.app.dao.AgentDao">
  <insert id="saveAppInfo" parameterType="map">
    insert into hbq_agent_app(name, a_desc, tags, reg_time)
    values (#{name}, #{desc}, #{tags}, #{reg_time})
  </insert>

  <delete id="deleteAppInfo">
    delete
    from hbq_agent_app
    where name = #{name}
  </delete>

  <insert id="saveInstInfo" parameterType="map">
    insert into hbq_agent_instance(data_center, ip, host_name, port, process_no, tags, reg_time, app_name)
    values (#{data_center}, #{ip}, #{host_name}, #{port}, #{process_no}, #{tags}, #{reg_time}, #{app_name})
  </insert>

  <delete id="deleteInstInfo">
    delete
    from hbq_agent_instance
    where data_center = #{data_center}
      and app_name = #{app_name}
      and ip = #{ip}
      and port = #{port}
  </delete>

  <update id="updateInstRegTime" parameterType="com.github.hbq.agent.app.pojo.InstInfo">
    update hbq_agent_instance
    set reg_time=#{regTime}
    where data_center = #{dataCenter}
      and app_name = #{app.name}
      and ip = #{ip}
      and port = #{port}
  </update>

  <insert id="saveQuotaInfo" parameterType="map">
    insert into hbq_agent_quota(app_name, quota_name, quota_desc, quota_unit,
                                quota_type, cycle_time, cycle_unit)
    values (#{app_name}, #{quota_name}, #{quota_desc}, #{quota_unit},
            #{quota_type}, #{cycle_time}, #{cycle_unit})
  </insert>

  <delete id="deleteQuotaInfo">
    delete
    from hbq_agent_quota
    where app_name = #{app_name}
      and quota_name = #{quota_name}
  </delete>

  <select id="queryQuotaInfos" parameterType="map" resultType="map">
    select app_name AS "appName",
    quota_name AS "quotaName",
    quota_desc AS "quotaDesc",
    quota_unit AS "quotaUnit",
    quota_type AS "quotaType",
    cycle_time AS "cycleTime",
    cycle_unit AS "cycleUnit"
    from hbq_agent_quota
    <where>
      <if test="appName!=null and appName!=''">
        <bind name="appNameLike" value="'%' + appName + '%'"/>
        and app_name like #{appNameLike}
      </if>
      <if test="quotaName!=null and quotaName!=''">
        <bind name="quotaNameLike" value="'%' + quotaName + '%'"/>
        and quota_name like #{quotaNameLike}
      </if>
      <if test="quotaDesc!=null and quotaDesc!=''">
        <bind name="quotaDescLike" value="'%' + quotaDesc + '%'"/>
        and quota_desc like #{quotaDescLike}
      </if>
      <if test="quotaType!=null and quotaType!=''">
        and quota_type = #{quotaType}
      </if>
    </where>
  </select>

  <insert id="saveKafkaInAppRateLimiter" parameterType="map">
    insert into hbq_agent_kafkain_app_rl(app_name, permits, update_time)
    values (#{app_name}, #{permits}, #{update_time})
  </insert>

  <insert id="saveKafkaInInstanceRateLimiter" parameterType="map">
    insert into hbq_agent_kafkain_inst_rl(data_center, app_name, ip, port, permits, update_time)
    values (#{data_center}, #{app_name}, #{ip}, #{port}, #{permits}, #{update_time})
  </insert>

  <update id="updateKafkaInInstanceRateLimiter">
    update hbq_agent_kafkain_inst_rl
    set permits=#{permits}
    where app_name = #{app_name}
  </update>

  <delete id="deleteKafkaInAppRateLimiter">
    delete
    from hbq_agent_kafkain_app_rl
    where app_name = #{app_name}
  </delete>

  <delete id="deleteKafkaInInstanceRateLimiter">
    delete
    from hbq_agent_kafkain_inst_rl
    where data_center = #{data_center}
      and app_name = #{app_name}
      and ip = #{ip}
      and port = #{port}
  </delete>

  <select id="queryKafkaInAppRateLimiter" resultType="map" parameterType="map">
    select permits AS "permits"
    from hbq_agent_kafkain_app_rl
    where app_name = #{app_name}
  </select>

  <select id="queryKafkaInInstanceRateLimiter" resultType="map" parameterType="map">
    select permits AS "permits"
    from hbq_agent_kafkain_inst_rl
    where data_center = #{data_center}
      and app_name = #{app_name}
      and ip = #{ip}
      and port = #{port}
  </select>

  <select id="queryInvalidInstances" resultType="map">
    select data_center AS "dataCenter",
           app_name    AS "appName",
           ip          AS "ip",
           port        AS "port"
    from hbq_agent_instance
    where reg_time <![CDATA[ <= ]]> #{expireTime}
  </select>

  <delete id="cleanInstance" parameterType="com.github.hbq.agent.app.pojo.InstInfo">
    delete
    from hbq_agent_instance
    where data_center = #{dataCenter}
      and app_name = #{app.name}
      and ip = #{ip}
      and port = #{port}
  </delete>

  <delete id="cleanKafkaInInstance" parameterType="com.github.hbq.agent.app.pojo.InstInfo">
    delete
    from hbq_agent_kafkain_inst_rl
    where data_center = #{dataCenter}
      and app_name = #{app.name}
      and ip = #{ip}
      and port = #{port}
  </delete>
</mapper>
